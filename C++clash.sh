#!/bin/bash

# creation of files

touch "$1.cpp" 
touch "$1.hpp"

CPP="$1.cpp"
HPP="$1.hpp"

# header definition

 echo -n "#ifndef " > "$HPP"
 echo "$1.HPP" | tr '[:lower:]' '[:upper:]' >> "$HPP"
 echo -n "# define " >> "$HPP"
 echo "$1.HPP" | tr '[:lower:]' '[:upper:]' >> "$HPP"
 echo "# ifndef DEBUG" >> "$HPP"
 echo "#  define DEBUG 0" >> "$HPP"
 echo "# endif" >>"$HPP"


 echo "" >> "$HPP"
 echo "class $1" >>"$HPP"
 echo "{" >>"$HPP"
 echo "	private:" >>"$HPP"
 echo "" >>"$HPP"
 echo "	//private atributes"  >>"$HPP"
 echo ""  >>"$HPP"
 echo "	public:"  >>"$HPP"
 echo "" >>"$HPP"
 echo "	//constructor"  >>"$HPP"
 echo "" >>"$HPP"
 echo "	$1 (void)" >>"$HPP"
 echo "" >>"$HPP"
 echo "	//constructor with parameters"  >>"$HPP"
 echo "" >>"$HPP"
 echo "	$1 (int pX, int pY), : x(pX), y(pY){}" >>"$HPP"
 echo "" >>"$HPP"
 echo "	//copy constructor"  >>"$HPP"
 echo "" >>"$HPP"
 echo "	$1 (const $1& param) : x(param.x), y(param.y){}" >>"$HPP"
 echo "" >>"$HPP"
 echo "	//assingment operator"  >>"$HPP"
 echo "" >>"$HPP"
 echo "	$1& operator=(const $1& param)" >>"$HPP"
 echo "	{" >>"$HPP"
 echo "		if (this != &param)" >>"$HPP"
 echo "		{" >>"$HPP"
 echo "			this.x = param.x;" >>"$HPP"
 echo "			this.y = param.y;" >>"$HPP"
 echo "		}" >>"$HPP"
 echo "		return *this;" >>"$HPP"
 echo "	}" >>"$HPP"
 echo "" >>"$HPP"
 echo "	//destructor"  >>"$HPP"
 echo "" >>"$HPP"
 echo "	~$1 (void)" >>"$HPP"
 echo "" >>"$HPP"
 echo "	//getters and seters" >>"$HPP"
 echo "" >>"$HPP"
 echo "};" >>"$HPP"
 echo -n "#endif" >> "$HPP"